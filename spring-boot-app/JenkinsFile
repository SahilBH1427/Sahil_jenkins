pipeline {
  agent {
    docker {
      image 'sahilf5/maven-docker-java17:latest'
      args '-v /var/run/docker.sock:/var/run/docker.sock --user root'
    }
  }

  stages {

    /* ---------- 1. Dummy checkout just to prove the job runs ---------- */
    stage('Checkout') {
      steps {
        echo 'passed'
        // real "checkout scm" can go here if you like
      }
    }

    /* ---------- 2. Build & unit tests -------------------------------- */
    stage('Build and Test') {
      steps {
        dir('spring-boot-app') {
          sh 'mvn -B clean package'
        }
      }
    }

    /* ---------- 3. SonarQube static analysis ------------------------- */
    stage('Static Code Analysis') {
      environment {
        SONAR_URL = 'http://13.233.84.218:9000'
      }
      steps {
        dir('spring-boot-app') {
          withCredentials([string(credentialsId: 'sonarqube',
                                  variable: 'SONAR_AUTH_TOKEN')]) {
            sh '''
              mvn -B sonar:sonar \
                  -Dsonar.login=$SONAR_AUTH_TOKEN \
                  -Dsonar.host.url=$SONAR_URL
            '''
          }
        }
      }
    }

    /* ---------- 4. Build and push Docker image ----------------------- */
    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "sahilf5/ultimate-cicd:${BUILD_NUMBER}"
      }
      steps {
        dir('spring-boot-app') {
          script {
            sh "docker build -t $DOCKER_IMAGE ."
            docker.withRegistry('https://index.docker.io/v1/', 'docker-cred') {
              docker.image(DOCKER_IMAGE).push()
            }
          }
        }
      }
    }

    /* ---------- 5. Update manifests repo ----------------------------- */
    stage('Update Deployment File') {
      steps {
        withEnv(["PATH+GIT=${tool 'Git'}/bin"]) {
          withCredentials([usernamePassword(credentialsId: 'github-token-sahil',
                                            usernameVariable: 'GH_USER',
                                            passwordVariable: 'GH_TOKEN')]) {
            sh """
              rm -rf manifest-repo || true
              git clone https://$GH_USER:$GH_TOKEN@github.com/SahilBH1427/jenkins-manifest.git manifest-repo
              cd manifest-repo

              git config user.email 'sahil.bharne1427@gmail.com'
              git config user.name  'Sahil Bharne'

              sed -i 's#replaceImageTag#${BUILD_NUMBER}#g' spring-boot-app-manifests/deployment.yml

              git add spring-boot-app-manifests/deployment.yml
              git commit -m 'ci: bump image tag to ${BUILD_NUMBER}'
              git push origin main
            """
          }
        }
      }
    }
  }

  /* ---------- Always tidy up workspace ------------------------------ */
  post {
    always { cleanWs() }
  }
}
