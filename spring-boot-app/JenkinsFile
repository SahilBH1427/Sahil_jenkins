pipeline {
  agent {
    docker {
      image 'sahilf5/maven-docker-java17:latest'
      args '-v /var/run/docker.sock:/var/run/docker.sock --user root'
    }
  }

  environment {
    SONAR_URL = "http://13.233.84.218:9000"
    DOCKER_IMAGE = "sahilf5/ultimate-cicd:${BUILD_NUMBER}"
  }

  stages {
    stage('Checkout') {
      steps {
        git branch: 'main', url: 'https://github.com/SahilBH1427/Sahil_jenkins'
      }
    }

    stage('Build and Test') {
      steps {
        dir('spring-boot-app') {
          sh 'mvn clean package'
        }
      }
    }

    stage('Static Code Analysis') {
      steps {
        dir('spring-boot-app') {
          withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
            sh '''
              mvn sonar:sonar \
                -Dsonar.token=$SONAR_AUTH_TOKEN \
                -Dsonar.host.url=$SONAR_URL
            '''
          }
        }
      }
    }

    stage('Build and Push Docker Image') {
      environment {
        REGISTRY_CREDENTIALS = credentials('docker-cred')
      }
      steps {
        dir('spring-boot-app') {
          script {
            sh "docker build -t ${DOCKER_IMAGE} ."

            def dockerImage = docker.image("${DOCKER_IMAGE}")
            doc
