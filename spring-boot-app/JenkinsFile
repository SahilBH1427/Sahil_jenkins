pipeline {
  agent {
    docker {
      image 'sahilf5/maven-docker-java17:latest'
      args '-v /var/run/docker.sock:/var/run/docker.sock --user root'
    }
  }

  stages {

    stage('Checkout') {
      steps {
        sh 'echo passed'
        // git branch: 'main', url: 'https://github.com/SahilBH1427/Sahil_jenkins'
      }
    }

    stage('Build and Test') {
      steps {
        dir('spring-boot-app') {
          sh 'mvn clean package'
        }
      }
    }

    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://13.233.84.218:9000"
      }
      steps {
        dir('spring-boot-app') {
          withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
            sh '''
              mvn sonar:sonar \
                -Dsonar.login=$SONAR_AUTH_TOKEN \
                -Dsonar.host.url=${SONAR_URL}
            '''
          }
        }
      }
    }

    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "sahilf5/ultimate-cicd:${BUILD_NUMBER}"
        REGISTRY_CREDENTIALS = credentials('docker-cred')
      }
      steps {
        dir('spring-boot-app') {
          script {
            sh 'docker build -t ${DOCKER_IMAGE} .'
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
              dockerImage.push()
            }
          }
        }
      }
    }

    stage('Update Deployment File') {
      steps {
        withEnv(["PATH+GIT=${tool 'Git'}/bin"]) {
          withCredentials([usernamePassword(credentialsId: 'docker-cred', usernameVariable: 'GIT_USERNAME', passwordVariable: 'GIT_PASSWORD')]) {
            sh '''
              rm -rf repo || true
              git clone https://${GIT_USERNAME}:${GIT_PASSWORD}@github.com/SahilBH1427/Sahil_jenkins.git repo
              cd repo
              git config user.email "sahil.bharne1427@gmail.com"
              git config user.name "Sahil Bharne"
              # modify deployment.yaml or any needed files
              git add .
              git commit -m "Update deployment with new image tag"
              git push origin main
            '''
          }
        }
      }
    }

  } 
} 
